## Enum
enum ClapFor {
	COURSE
	POST
}

## Inputs
input InputPost {
	title: String
	description: String!
	photoURL: String
	linkURL: String
}

## Types
type GetPosts {
	allPost: [Post]
	success: Success
}

type GetPostsOwner {
	allPostOwner: [Post]
	success: Success
}

type GetPost {
	post: Post
	success: Success
}

type CreatePost {
	createPost: Post
	success: Success
}

type ClapPost {
	post: String
	success: Success
}

## Unions
union UGetAllPost = GetPosts | ErrorResponse
union UGetPostsByOwner = GetPostsOwner | ErrorResponse
union UGetPost = GetPost | ErrorResponse
union UCreatePost = CreatePost | ErrorResponse
union UClapPost = ClapPost | ErrorResponse

## Queries
type Query {
	getAllPosts(lastPost: String): UGetAllPost @auth
	getPostsByOwner(lastPost: String, owner: String): UGetPostsByOwner @auth
	getPostsById(id: String!): UGetPost @auth
}

## Mutations
type Mutation {
	createPost(post: InputPost!): UCreatePost @auth
	clapPost(collection: ClapFor!, post: String!): UClapPost @auth
}
